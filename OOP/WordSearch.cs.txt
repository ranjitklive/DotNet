public class Solution
{
    public static bool Exist(char[][] board, string word)
    {

        if (board == null || board[0].Length == 0)
            return false;
        if (word == "")
            return true;

        for (int i = 0; i < board.Length; i++)
        {
            for (int j = 0; j < board[0].Length; j++)
            {
                if (WordSearch(board, word, i, j, 0))
                    return true;
            }
        }

        return false;
    }

    private static bool WordSearch(char[][] board, string word, int i, int j, int idx)
    {
        if (idx == word.Length)
            return true;
        if (i < 0 || i >= board.Length || j < 0 || j >= board[0].Length || word[idx] != board[i][j])
            return false;

        board[i][j] = '#'; // visted

        bool find = WordSearch(board, word, i - 1, j, idx + 1)
            || WordSearch(board, word, i + 1, j, idx + 1)
            || WordSearch(board, word, i, j - 1, idx + 1)
            || WordSearch(board, word, i, j + 1, idx + 1);

        board[i][j] = word[idx]; // backtracking

        return find;
    }

    public static void Main(string[] args)
    {
        char[][] board = new char[][]
        {
            new char[] { 'A', 'B', 'C', 'E'},
            new char[] { 'S', 'F', 'C', 'S'},
            new char[] { 'A', 'D', 'E', 'E'}
        };

        System.Console.WriteLine(Exist(board, "ABCCED"));
    }
}